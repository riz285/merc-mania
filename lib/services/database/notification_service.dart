// ignore_for_file: avoid_print

import 'package:cloud_firestore/cloud_firestore.dart';

class NotificationService {
  FirebaseFirestore firestore = FirebaseFirestore.instance;
  final notificationCollectionRef = FirebaseFirestore.instance.collection('notifications');
  final userNotificationCollectionRef = FirebaseFirestore.instance.collection('user_notifications');

// CRUD
  // Add notification
  Future<void> addNotification(Map<String, dynamic> data) async {
    try {
      await notificationCollectionRef.add(data);
      print('Data added successfully');
    } catch (e) {
      print('$e');
    }
  }

  // Fetch general notifications
  Stream<QuerySnapshot<Map<String, dynamic>>> getNotifications() {
    return notificationCollectionRef.orderBy('timestamp', descending: true).snapshots();
  }

  // Add notification
  Future<void> addUserNotification(Map<String, dynamic> data) async {
    try {
      final docRef = await userNotificationCollectionRef.add(data);
      print('Data added successfully');
      final autoGeneratedId = docRef.id;
      await docRef.update({'id' : autoGeneratedId});
      print('Update id successfully');
      print('Data added successfully');
    } catch (e) {
      print('$e');
    }
  }

  // Fetch individual notifications
  Stream<QuerySnapshot<Map<String, dynamic>>> getIndividualNotifications(String userId) {
    return userNotificationCollectionRef.where('user_id', isEqualTo: userId)
                                        .orderBy('timestamp', descending: true).snapshots();
  }

  // Deleta notifications
  // void deleteNotifications() {
  //   try {
  //     notificationCollectionRef.get().then((querySnapshot) {
  //       for (var doc in querySnapshot.docs) {
  //         doc.reference.delete();
  //       }
  //     });
  //   } catch (e) {
  //     print('$e');
  //   }
  // }
}